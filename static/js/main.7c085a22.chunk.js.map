{"version":3,"sources":["components/TelecommunicationsOperator/TelecommunicationsOperator.jsx","components/Balance/BalanceSlice.js","components/Balance/Balance.jsx","components/InputPhoneNumber/InputPhoneNumber.jsx","components/InputAmount/InputAmount.jsx","components/ButtonPay/ButtonPay.jsx","components/Toast/Toast.jsx","components/Containers/LinkPayment/LinkPayment.jsx","App.js","store.js","reportWebVitals.js","index.js"],"names":["options","value","label","src","height","alt","customStyles","menu","provided","state","width","selectProps","borderBottom","color","menuColor","option","backgroundColor","isSelected","control","_","display","valueContainer","justifyContent","singleValue","opacity","isDisabled","transition","TelecommunicationsOperator","updateOperator","useState","selectedOption","setSelectedOption","useEffect","className","classNames","telecommunucations_operator","styles","onChange","placeholder","BalanceSlice","createSlice","name","initialState","reducers","incrementByAmount","action","payload","selectBalance","balance","actions","Balance","balace","useSelector","balace_label","InputPhoneNumber","updatePhone","phoneNumber","setPhoneNumber","error","setError","validateInput","length","input_phone_number","type","required","e","previousValue","currentValue","replace","currentValueLength","slice","normalizeInput","target","InputAmount","updateAmount","amount","setAmount","ButtonPay","phones","toast","dispatch","useDispatch","button_pay","onClick","event","Promise","resolve","reject","Math","random","then","Number","catch","Toast","toastList","position","autoDelete","dismissTime","list","setList","interval","setInterval","deleteToast","id","clearInterval","listItemIndex","findIndex","toastListItem","splice","map","i","style","icon","title","description","LinkPayment","operator","setOperator","phone","setPhone","checkValue","autoDeleteTime","toastProperties","showToast","floor","link_payment","input_operator_phone","form_pay","App","configureStore","reducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7c085a22.chunk.js","sourcesContent":["import './TelecommunicationsOperator.sass'\nimport classNames from 'class-names'\nimport { useState, useEffect } from 'react'\nimport Select from 'react-select'\n\nconst options = [\n\t{\n\t\tvalue: 'MegaFon',\n\t\tlabel: (\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc={'/images/link_operator/megafon.svg'}\n\t\t\t\t\theight=\"30px\"\n\t\t\t\t\talt=\"megafon\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t),\n\t},\n\t{\n\t\tvalue: 'MTS',\n\t\tlabel: (\n\t\t\t<div>\n\t\t\t\t<img src={'/images/link_operator/mts.svg'} height=\"30px\" alt=\"mts\" />\n\t\t\t</div>\n\t\t),\n\t},\n\t{\n\t\tvalue: 'BeeLine',\n\t\tlabel: (\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc={'/images/link_operator/beeline.svg'}\n\t\t\t\t\theight=\"30px\"\n\t\t\t\t\talt=\"beeline\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t),\n\t},\n]\n\nconst customStyles = {\n\tmenu: (provided, state) => ({\n\t\t...provided,\n\t\twidth: state.selectProps.width,\n\t\tborderBottom: '1px dotted pink',\n\t\tcolor: state.selectProps.menuColor,\n\t\t// padding: 20,\n\t}),\n\n\toption: (provided, state) => {\n\t\tconst backgroundColor = state.isSelected ? '#c7c7c7' : 'white'\n\n\t\treturn { ...provided, backgroundColor }\n\t},\n\n\tcontrol: (_, { selectProps: { width } }) => ({\n\t\twidth: width,\n\t\tdisplay: 'flex',\n\t\t// justifyContent: 'center',\n\t}),\n\n\tvalueContainer: (provided, state) => {\n\t\tconst justifyContent = 'center'\n\t\treturn { ...provided, justifyContent }\n\t},\n\n\tsingleValue: (provided, state) => {\n\t\tconst opacity = state.isDisabled ? 0.5 : 1\n\t\tconst transition = 'opacity 300ms'\n\n\t\treturn { ...provided, opacity, transition }\n\t},\n}\n\nconst TelecommunicationsOperator = ({ updateOperator }) => {\n\tconst [selectedOption, setSelectedOption] = useState(options[0])\n\n\tconst handleChange = (selectedOption) => {\n\t\tsetSelectedOption(selectedOption)\n\t}\n\n\tuseEffect(() => {\n\t\tupdateOperator(selectedOption.value)\n\t}, [updateOperator, selectedOption])\n\n\treturn (\n\t\t<div className={classNames({ telecommunucations_operator: true })}>\n\t\t\t<Select\n\t\t\t\tstyles={customStyles}\n\t\t\t\tvalue={selectedOption}\n\t\t\t\toptions={options}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tplaceholder=\"Выбирете оператора\"\n\t\t\t\twidth=\"150px\"\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default TelecommunicationsOperator\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const BalanceSlice = createSlice({\n\tname: 'balance',\n\tinitialState: {\n\t\tvalue: 0,\n\t},\n\treducers: {\n\t\tincrementByAmount: (state, action) => {\n\t\t\tstate.value += action.payload\n\t\t},\n\t},\n})\n\nexport const selectBalance = (state) => state.balance.value\n\nexport const { incrementByAmount } = BalanceSlice.actions\n\nexport default BalanceSlice.reducer\n","import './Balance.sass'\nimport classNames from 'class-names'\nimport { useSelector } from 'react-redux'\nimport { selectBalance } from './BalanceSlice.js'\n\nconst Balance = () => {\n\tconst balace = useSelector(selectBalance)\n\n\treturn (\n\t\t<div className={classNames({ balance: true })}>\n\t\t\t<label className={classNames({ balace_label: true })}>\n\t\t\t\tBalance: {balace}\n\t\t\t</label>\n\t\t</div>\n\t)\n}\nexport default Balance\n","import './InputPhoneNumber.sass'\nimport { useState, useEffect } from 'react'\nimport classNames from 'class-names'\n\nconst normalizeInput = (value, previousValue) => {\n\tif (!value) return value\n\n\tconst currentValue = value.replace(/[^\\d]/g, '')\n\tconst currentValueLength = currentValue.length\n\t// ---------\n\tif (currentValueLength < previousValue.length && currentValueLength < 4)\n\t\treturn currentValue\n\n\tif (currentValueLength < previousValue.length && currentValueLength < 7)\n\t\treturn `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`\n\n\tif (currentValueLength < previousValue.length && currentValueLength < 9)\n\t\treturn `(${currentValue.slice(0, 3)}) ${currentValue.slice(\n\t\t\t3,\n\t\t\t6\n\t\t)}-${currentValue.slice(6, 8)}`\n\n\tif (currentValueLength < previousValue.length)\n\t\treturn `(${currentValue.slice(0, 3)}) ${currentValue.slice(\n\t\t\t3,\n\t\t\t6\n\t\t)}-${currentValue.slice(6, 8)}-${currentValue.slice(8, 10)}`\n\t// ---------\n\tif (!previousValue || value.length > previousValue.length) {\n\t\tif (currentValueLength < 4) return currentValue\n\n\t\tif (currentValueLength < 7)\n\t\t\treturn `(${currentValue.slice(0, 3)}) ${currentValue.slice(3)}`\n\n\t\tif (currentValueLength < 9)\n\t\t\treturn `(${currentValue.slice(0, 3)}) ${currentValue.slice(\n\t\t\t\t3,\n\t\t\t\t6\n\t\t\t)}-${currentValue.slice(6, 8)}`\n\n\t\treturn `(${currentValue.slice(0, 3)}) ${currentValue.slice(\n\t\t\t3,\n\t\t\t6\n\t\t)}-${currentValue.slice(6, 8)}-${currentValue.slice(8, 10)}`\n\t}\n}\n\nconst InputPhoneNumber = ({ updatePhone }) => {\n\tconst [phoneNumber, setPhoneNumber] = useState('')\n\tconst [error, setError] = useState('')\n\n\tconst handleChange = (event) => {\n\t\tsetPhoneNumber(normalizeInput(event.target.value, phoneNumber))\n\t\tvalidateInput(phoneNumber)\n\t}\n\n\tuseEffect(() => {\n\t\tupdatePhone(phoneNumber)\n\t}, [updatePhone, phoneNumber])\n\n\tconst validateInput = (value) => {\n\t\tif (!value) setError('Required!')\n\t\telse if (value.length !== 15)\n\t\t\tsetError('Invalid phone format. ex: (900) 123-45-67')\n\t\telse if (value.length === 15) setError('')\n\t}\n\n\treturn (\n\t\t<div className={classNames({ input_phone_number: true })}>\n\t\t\t<input\n\t\t\t\ttype=\"tel\"\n\t\t\t\trequired\n\t\t\t\tvalue={phoneNumber || ''}\n\t\t\t\tonChange={(e) => handleChange(e)}\n\t\t\t\tplaceholder=\"(900) 123-45-67\"\n\t\t\t/>\n\t\t\t{error && <p className=\"errors\">{error}</p>}\n\t\t</div>\n\t)\n}\n\nexport default InputPhoneNumber\n","import './InputAmount.sass'\nimport { useState, useEffect } from 'react'\nimport classNames from 'class-names'\n\nconst InputAmount = ({ updateAmount }) => {\n\tconst [amount, setAmount] = useState(0)\n\n\tconst handleChange = (event) => {\n\t\tsetAmount(event.target.value.replace(/[^\\d]/g, ''))\n\t}\n\n\tuseEffect(() => {\n\t\tupdateAmount(amount)\n\t}, [updateAmount, amount])\n\n\treturn (\n\t\t<div className={classNames({ amount: true })}>\n\t\t\t<input\n\t\t\t\trequired\n\t\t\t\ttype=\"number\"\n\t\t\t\tonChange={(e) => handleChange(e)}\n\t\t\t\tvalue={amount}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default InputAmount\n","import './ButtonPay.sass'\nimport { useDispatch } from 'react-redux'\nimport classNames from 'class-names'\nimport { incrementByAmount } from '../Balance/BalanceSlice.js'\n\nconst ButtonPay = ({ amount, phones, toast }) => {\n\tconst dispatch = useDispatch()\n\tconst handleButtont = (event) => {\n\t\tif (!amount > 0 || phones.length < 15) {\n\t\t\ttoast('danger')\n\t\t\treturn\n\t\t}\n\n\t\tconst ansewr = new Promise((resolve, reject) => {\n\t\t\tMath.random() < 0.5 ? resolve() : reject()\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tdispatch(incrementByAmount(Number(amount)))\n\t\t\t\ttoast('success')\n\t\t\t})\n\t\t\t.catch(() => toast('danger'))\n\t\t// dispatch(incrementByAmount(Number(amount)))\n\t\t// toast('success')\n\t}\n\n\treturn (\n\t\t<div className={classNames({ button_pay: true })}>\n\t\t\t<button onClick={handleButtont}>PAY</button>\n\t\t</div>\n\t)\n}\nexport default ButtonPay\n","import './Toast.sass'\nimport { useState, useEffect } from 'react'\n\nconst Toast = ({ toastList, position, autoDelete, dismissTime }) => {\n\tconst [list, setList] = useState(toastList)\n\n\tuseEffect(() => {\n\t\tsetList([...toastList])\n\n\t\t// eslint-disable-next-line\n\t}, [toastList])\n\n\tuseEffect(() => {\n\t\tconst interval = setInterval(() => {\n\t\t\tif (autoDelete && toastList.length && list.length) {\n\t\t\t\tdeleteToast(toastList[0].id)\n\t\t\t}\n\t\t}, dismissTime)\n\n\t\treturn () => {\n\t\t\tclearInterval(interval)\n\t\t}\n\n\t\t// eslint-disable-next-line\n\t}, [toastList, autoDelete, dismissTime, list])\n\n\tconst deleteToast = (id) => {\n\t\tconst listItemIndex = list.findIndex((e) => e.id === id)\n\t\tconst toastListItem = toastList.findIndex((e) => e.id === id)\n\t\tlist.splice(listItemIndex, 1)\n\t\ttoastList.splice(toastListItem, 1)\n\t\tsetList([...list])\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className={`notification-container ${position}`}>\n\t\t\t\t{list.map((toast, i) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\tclassName={`notification toast ${position}`}\n\t\t\t\t\t\tstyle={{ backgroundColor: toast.backgroundColor }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<button onClick={() => deleteToast(toast.id)}>X</button>\n\t\t\t\t\t\t<div className=\"notification-image\">\n\t\t\t\t\t\t\t<img src={toast.icon} alt=\"\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p className=\"notification-title\">{toast.title}</p>\n\t\t\t\t\t\t\t<p className=\"notification-message\">{toast.description}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</>\n\t)\n}\nexport default Toast\n","import './LinkPayment.sass'\nimport TelecommunicationsOperator from '../../TelecommunicationsOperator/TelecommunicationsOperator.jsx'\nimport Balance from '../../Balance/Balance.jsx'\nimport InputPhoneNumber from '../../InputPhoneNumber/InputPhoneNumber.jsx'\nimport InputAmount from '../../InputAmount/InputAmount.jsx'\nimport ButtonPay from '../../ButtonPay/ButtonPay.jsx'\nimport Toast from '../../Toast/Toast.jsx'\nimport classNames from 'class-names'\nimport { useState } from 'react'\n\nconst LinkPayment = () => {\n\tconst [operator, setOperator] = useState()\n\tconst [phone, setPhone] = useState()\n\tconst [amount, setAmount] = useState()\n\n\tconst [list, setList] = useState([])\n\tconst [position, setPosition] = useState('bottom-right')\n\tlet [checkValue, setCheckValue] = useState(true)\n\tconst [autoDeleteTime, setAutoDeleteTime] = useState(0)\n\tlet toastProperties = null\n\n\tconst showToast = (type) => {\n\t\tconst id = Math.floor(Math.random() * 101 + 1)\n\n\t\tswitch (type) {\n\t\t\tcase 'success':\n\t\t\t\ttoastProperties = {\n\t\t\t\t\tid,\n\t\t\t\t\ttitle: 'Success',\n\t\t\t\t\tdescription: `Pay ${Number(amount)} on ${phone} in ${operator}`,\n\t\t\t\t\tbackgroundColor: '#5cb85c',\n\t\t\t\t\ticon: '/images/assets/check.svg',\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'danger':\n\t\t\t\ttoastProperties = {\n\t\t\t\t\tid,\n\t\t\t\t\ttitle: 'Danger',\n\t\t\t\t\tdescription: 'Error Pay',\n\t\t\t\t\tbackgroundColor: '#d9534f',\n\t\t\t\t\ticon: '/images/assets/error.svg',\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'info':\n\t\t\t\ttoastProperties = {\n\t\t\t\t\tid,\n\t\t\t\t\ttitle: 'Info',\n\t\t\t\t\tdescription: 'This is an info toast component',\n\t\t\t\t\tbackgroundColor: '#5bc0de',\n\t\t\t\t\t// icon: infoIcon,\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'warning':\n\t\t\t\ttoastProperties = {\n\t\t\t\t\tid,\n\t\t\t\t\ttitle: 'Warning',\n\t\t\t\t\tdescription: 'This is a warning toast component',\n\t\t\t\t\tbackgroundColor: '#f0ad4e',\n\t\t\t\t\t// icon: warningIcon,\n\t\t\t\t}\n\t\t\t\tbreak\n\n\t\t\tdefault:\n\t\t\t\tsetList([])\n\t\t}\n\n\t\tsetList([...list, toastProperties])\n\t}\n\n\tconst onCheckBoxChange = () => {\n\t\tcheckValue = !checkValue\n\t\tsetCheckValue(checkValue)\n\t\tsetList([])\n\t}\n\n\t// const onInputChange = (e) => {\n\t// \tconst time = parseInt(e.target.value, 10)\n\t// \tsetDismissTime(time)\n\t// }\n\n\treturn (\n\t\t<div className={classNames({ link_payment: true })}>\n\t\t\t<Balance toast={showToast} />\n\n\t\t\t<div className={classNames({ input_operator_phone: true })}>\n\t\t\t\t<TelecommunicationsOperator updateOperator={setOperator} />\n\t\t\t\t<InputPhoneNumber updatePhone={setPhone} />\n\t\t\t</div>\n\t\t\t<div className={classNames({ form_pay: true })}>\n\t\t\t\t<InputAmount updateAmount={setAmount} />\n\t\t\t\t<ButtonPay amount={amount} toast={showToast} phones={phone} />\n\t\t\t</div>\n\t\t\t<Toast\n\t\t\t\ttoastList={list}\n\t\t\t\tposition={position}\n\t\t\t\tautoDelete={checkValue}\n\t\t\t\tautoDeleteTime={autoDeleteTime}\n\t\t\t\tdismissTime={5000}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default LinkPayment\n","import './App.sass'\nimport LinkPayment from './components/Containers/LinkPayment/LinkPayment.jsx'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<LinkPayment />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport BalanceSlice from './components/Balance/BalanceSlice.js'\n\n\nexport default configureStore({\n  reducer: {\n    balance: BalanceSlice\n  }\n})","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.sass'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}